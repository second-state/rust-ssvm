(function() {var implementors = {};
implementors["ansi_term"] = [{"text":"impl Freeze for Prefix","synthetic":true,"types":[]},{"text":"impl Freeze for Infix","synthetic":true,"types":[]},{"text":"impl Freeze for Suffix","synthetic":true,"types":[]},{"text":"impl Freeze for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for ANSIGenericStrings&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Colour","synthetic":true,"types":[]}];
implementors["atty"] = [{"text":"impl Freeze for Stream","synthetic":true,"types":[]}];
implementors["clap"] = [{"text":"impl&lt;'a, 'b&gt; !Freeze for App&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Freeze for Arg&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ArgGroup&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ArgMatches&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for OsValues&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SubCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for AppSettings","synthetic":true,"types":[]},{"text":"impl Freeze for ArgSettings","synthetic":true,"types":[]},{"text":"impl Freeze for Shell","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]}];
implementors["evmc_client"] = [{"text":"impl Freeze for EvmcVm","synthetic":true,"types":[]},{"text":"impl Freeze for EvmcLoaderErrorCode","synthetic":true,"types":[]}];
implementors["evmc_sys"] = [{"text":"impl Freeze for evmc_bytes32","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_address","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_message","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_tx_context","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_result","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_host_interface","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_vm","synthetic":true,"types":[]},{"text":"impl Freeze for _bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_call_kind","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_flags","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_status_code","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_storage_status","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_set_option_result","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_revision","synthetic":true,"types":[]},{"text":"impl Freeze for evmc_capabilities","synthetic":true,"types":[]}];
implementors["evmc_vm"] = [{"text":"impl&lt;T&gt; Freeze for EvmcContainer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutionResult","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutionMessage","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ExecutionContext&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["hex"] = [{"text":"impl Freeze for FromHexError","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Freeze for group","synthetic":true,"types":[]},{"text":"impl Freeze for utimbuf","synthetic":true,"types":[]},{"text":"impl Freeze for timeval","synthetic":true,"types":[]},{"text":"impl Freeze for timespec","synthetic":true,"types":[]},{"text":"impl Freeze for rlimit","synthetic":true,"types":[]},{"text":"impl Freeze for rusage","synthetic":true,"types":[]},{"text":"impl Freeze for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for hostent","synthetic":true,"types":[]},{"text":"impl Freeze for iovec","synthetic":true,"types":[]},{"text":"impl Freeze for pollfd","synthetic":true,"types":[]},{"text":"impl Freeze for winsize","synthetic":true,"types":[]},{"text":"impl Freeze for linger","synthetic":true,"types":[]},{"text":"impl Freeze for sigval","synthetic":true,"types":[]},{"text":"impl Freeze for itimerval","synthetic":true,"types":[]},{"text":"impl Freeze for tms","synthetic":true,"types":[]},{"text":"impl Freeze for servent","synthetic":true,"types":[]},{"text":"impl Freeze for protoent","synthetic":true,"types":[]},{"text":"impl Freeze for in_addr","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Freeze for addrinfo","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Freeze for fd_set","synthetic":true,"types":[]},{"text":"impl Freeze for tm","synthetic":true,"types":[]},{"text":"impl Freeze for sched_param","synthetic":true,"types":[]},{"text":"impl Freeze for Dl_info","synthetic":true,"types":[]},{"text":"impl Freeze for lconv","synthetic":true,"types":[]},{"text":"impl Freeze for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for ifaddrs","synthetic":true,"types":[]},{"text":"impl Freeze for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Freeze for arpreq","synthetic":true,"types":[]},{"text":"impl Freeze for arpreq_old","synthetic":true,"types":[]},{"text":"impl Freeze for arphdr","synthetic":true,"types":[]},{"text":"impl Freeze for mmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for epoll_event","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Freeze for utsname","synthetic":true,"types":[]},{"text":"impl Freeze for sigevent","synthetic":true,"types":[]},{"text":"impl Freeze for rlimit64","synthetic":true,"types":[]},{"text":"impl Freeze for glob_t","synthetic":true,"types":[]},{"text":"impl Freeze for passwd","synthetic":true,"types":[]},{"text":"impl Freeze for spwd","synthetic":true,"types":[]},{"text":"impl Freeze for dqblk","synthetic":true,"types":[]},{"text":"impl Freeze for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Freeze for itimerspec","synthetic":true,"types":[]},{"text":"impl Freeze for fsid_t","synthetic":true,"types":[]},{"text":"impl Freeze for packet_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Freeze for if_nameindex","synthetic":true,"types":[]},{"text":"impl Freeze for msginfo","synthetic":true,"types":[]},{"text":"impl Freeze for sembuf","synthetic":true,"types":[]},{"text":"impl Freeze for input_event","synthetic":true,"types":[]},{"text":"impl Freeze for input_id","synthetic":true,"types":[]},{"text":"impl Freeze for input_absinfo","synthetic":true,"types":[]},{"text":"impl Freeze for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Freeze for input_mask","synthetic":true,"types":[]},{"text":"impl Freeze for ff_replay","synthetic":true,"types":[]},{"text":"impl Freeze for ff_trigger","synthetic":true,"types":[]},{"text":"impl Freeze for ff_envelope","synthetic":true,"types":[]},{"text":"impl Freeze for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_effect","synthetic":true,"types":[]},{"text":"impl Freeze for uinput_ff_upload","synthetic":true,"types":[]},{"text":"impl Freeze for uinput_ff_erase","synthetic":true,"types":[]},{"text":"impl Freeze for uinput_abs_setup","synthetic":true,"types":[]},{"text":"impl Freeze for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Freeze for ucred","synthetic":true,"types":[]},{"text":"impl Freeze for mntent","synthetic":true,"types":[]},{"text":"impl Freeze for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Freeze for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for arpd_request","synthetic":true,"types":[]},{"text":"impl Freeze for inotify_event","synthetic":true,"types":[]},{"text":"impl Freeze for fanotify_response","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Freeze for regmatch_t","synthetic":true,"types":[]},{"text":"impl Freeze for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Freeze for __c_anonymous_sockaddr_can_tp","synthetic":true,"types":[]},{"text":"impl Freeze for __c_anonymous_sockaddr_can_j1939","synthetic":true,"types":[]},{"text":"impl Freeze for can_filter","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Freeze for dirent","synthetic":true,"types":[]},{"text":"impl Freeze for dirent64","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Freeze for uinput_setup","synthetic":true,"types":[]},{"text":"impl Freeze for uinput_user_dev","synthetic":true,"types":[]},{"text":"impl Freeze for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Freeze for mq_attr","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_can","synthetic":true,"types":[]},{"text":"impl Freeze for statx","synthetic":true,"types":[]},{"text":"impl Freeze for statx_timestamp","synthetic":true,"types":[]},{"text":"impl Freeze for aiocb","synthetic":true,"types":[]},{"text":"impl Freeze for __exit_status","synthetic":true,"types":[]},{"text":"impl Freeze for __timeval","synthetic":true,"types":[]},{"text":"impl Freeze for glob64_t","synthetic":true,"types":[]},{"text":"impl Freeze for msghdr","synthetic":true,"types":[]},{"text":"impl Freeze for cmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for termios","synthetic":true,"types":[]},{"text":"impl Freeze for mallinfo","synthetic":true,"types":[]},{"text":"impl Freeze for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Freeze for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Freeze for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Freeze for nlattr","synthetic":true,"types":[]},{"text":"impl Freeze for rtentry","synthetic":true,"types":[]},{"text":"impl Freeze for timex","synthetic":true,"types":[]},{"text":"impl Freeze for ntptimeval","synthetic":true,"types":[]},{"text":"impl Freeze for regex_t","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Freeze for utmpx","synthetic":true,"types":[]},{"text":"impl Freeze for sigset_t","synthetic":true,"types":[]},{"text":"impl Freeze for sysinfo","synthetic":true,"types":[]},{"text":"impl Freeze for msqid_ds","synthetic":true,"types":[]},{"text":"impl Freeze for sigaction","synthetic":true,"types":[]},{"text":"impl Freeze for statfs","synthetic":true,"types":[]},{"text":"impl Freeze for flock","synthetic":true,"types":[]},{"text":"impl Freeze for flock64","synthetic":true,"types":[]},{"text":"impl Freeze for siginfo_t","synthetic":true,"types":[]},{"text":"impl Freeze for stack_t","synthetic":true,"types":[]},{"text":"impl Freeze for stat","synthetic":true,"types":[]},{"text":"impl Freeze for stat64","synthetic":true,"types":[]},{"text":"impl Freeze for statfs64","synthetic":true,"types":[]},{"text":"impl Freeze for statvfs64","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Freeze for user_regs_struct","synthetic":true,"types":[]},{"text":"impl Freeze for user","synthetic":true,"types":[]},{"text":"impl Freeze for mcontext_t","synthetic":true,"types":[]},{"text":"impl Freeze for ipc_perm","synthetic":true,"types":[]},{"text":"impl Freeze for shmid_ds","synthetic":true,"types":[]},{"text":"impl Freeze for termios2","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Freeze for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl Freeze for ucontext_t","synthetic":true,"types":[]},{"text":"impl Freeze for statvfs","synthetic":true,"types":[]},{"text":"impl Freeze for max_align_t","synthetic":true,"types":[]},{"text":"impl Freeze for sem_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Freeze for can_frame","synthetic":true,"types":[]},{"text":"impl Freeze for canfd_frame","synthetic":true,"types":[]},{"text":"impl Freeze for in6_addr","synthetic":true,"types":[]},{"text":"impl Freeze for __c_anonymous_sockaddr_can_can_addr","synthetic":true,"types":[]},{"text":"impl Freeze for DIR","synthetic":true,"types":[]},{"text":"impl Freeze for FILE","synthetic":true,"types":[]},{"text":"impl Freeze for fpos_t","synthetic":true,"types":[]},{"text":"impl Freeze for timezone","synthetic":true,"types":[]},{"text":"impl Freeze for fpos64_t","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl Freeze for Library","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; Freeze for Symbol&lt;'lib, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Library","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Symbol&lt;T&gt;","synthetic":true,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Freeze for ParseBigIntError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TryFromBigIntError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for BigUint","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for U32Digits&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for U64Digits&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BigInt","synthetic":true,"types":[]},{"text":"impl Freeze for Sign","synthetic":true,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; Freeze for Complex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for ParseComplexError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_iter"] = [{"text":"impl&lt;A&gt; Freeze for Range&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RangeInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RangeStep&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RangeStepInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RangeFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RangeStepFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Freeze for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Freeze for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Freeze for FloatErrorKind","synthetic":true,"types":[]}];
implementors["strsim"] = [{"text":"impl Freeze for StrSimError","synthetic":true,"types":[]}];
implementors["textwrap"] = [{"text":"impl Freeze for HyphenSplitter","synthetic":true,"types":[]},{"text":"impl Freeze for NoHyphenation","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for Wrapper&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for IntoWrapIter&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'w, 'a, S&gt; Freeze for WrapIter&lt;'w, 'a, S&gt;","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Freeze for VecMap&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for VacantEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for OccupiedEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Iter&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for IterMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Keys&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Values&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for ValuesMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Freeze for IntoIter&lt;V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Drain&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Entry&lt;'a, V&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()